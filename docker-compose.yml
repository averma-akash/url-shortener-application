services:
  url-shortener:
    build: .
    container_name: url-shortener-application
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
    command: ["java", "-jar", "/app/app.jar"]
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@host.docker.internal:1521/orclpdb  # Change if needed
      - SPRING_DATASOURCE_USERNAME=local_db
      - SPRING_DATASOURCE_PASSWORD=jordan1993
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_REDIS_HOST=redis-container
      - SPRING_REDIS_PORT=6379
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.9
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - elk-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk-network

networks:
  app-network:
    driver: bridge
  elk-network:
    driver: bridge
